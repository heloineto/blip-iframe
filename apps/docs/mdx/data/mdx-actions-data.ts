import { Frontmatter } from '@/types';

export const MDX_ACTIONS_DATA: Record<string, Frontmatter> = {
  addTenantPrefixToUrl: {
    title: 'addTenantPrefixToUrl',
    package: 'blip-iframe',
    slug: '/actions/add-tenant-prefix-to-url',
    description: 'Adds the tenant id prefix to a URL.',
    import: "import { addTenantPrefixToUrl } from 'blip-iframe';",
    source: 'actions/addTenantPrefixToUrl.ts',
    docs: 'actions/add-tenant-prefix-to-url.mdx',
  },
  getAccount: {
    title: 'getAccount',
    package: 'blip-iframe',
    slug: '/actions/get-account',
    description: 'Get details about the current user account.',
    import: "import { getAccount } from 'blip-iframe';",
    source: 'actions/getAccount.ts',
    docs: 'actions/get-account.mdx',
  },
  getApplication: {
    title: 'getApplication',
    package: 'blip-iframe',
    slug: '/actions/get-application',
    description: 'Get details about a bot (application).',
    import: "import { getApplication } from 'blip-iframe';",
    source: 'actions/getApplication.ts',
    docs: 'actions/get-application.mdx',
  },
  getCurrentLanguage: {
    title: 'getCurrentLanguage',
    package: 'blip-iframe',
    slug: '/actions/get-current-language',
    description: 'Get the language of the current user account.',
    import: "import { getCurrentLanguage } from 'blip-iframe';",
    source: 'actions/getCurrentLanguage.ts',
    docs: 'actions/get-current-language.mdx',
  },
  getPermissionsObject: {
    title: 'getPermissionsObject',
    package: 'blip-iframe',
    slug: '/actions/get-permissions-object',
    description: 'Get the permissions object.',
    import: "import { getPermissionsObject } from 'blip-iframe';",
    source: 'actions/getPermissionsObject.ts',
    docs: 'actions/get-permissions-object.mdx',
  },
  getToken: {
    title: 'getToken',
    package: 'blip-iframe',
    slug: '/actions/get-token',
    description: 'Gets the JWT token of the current user.',
    import: "import { getToken } from 'blip-iframe';",
    source: 'actions/getToken.ts',
    docs: 'actions/get-token.mdx',
  },
  hasPermissions: {
    title: 'hasPermissions',
    package: 'blip-iframe',
    slug: '/actions/has-permissions',
    description: 'Checks if the user has the specified permissions.',
    import: "import { hasPermissions } from 'blip-iframe';",
    source: 'actions/hasPermissions.ts',
    docs: 'actions/has-permissions.mdx',
  },
  heightChange: {
    title: 'heightChange',
    package: 'blip-iframe',
    slug: '/actions/height-change',
    description: "Changes the height the extension's iframe parent.",
    import: "import { heightChange } from 'blip-iframe';",
    source: 'actions/heightChange.ts',
    docs: 'actions/height-change.mdx',
  },
  hideNavbar: {
    title: 'hideNavbar',
    package: 'blip-iframe',
    slug: '/actions/hide-navbar',
    description: 'Hides the top navigation bar of the blip platform.',
    import: "import { hideNavbar } from 'blip-iframe';",
    source: 'actions/hideNavbar.ts',
    docs: 'actions/hide-navbar.mdx',
  },
  segment: {
    title: 'segment',
    package: 'blip-iframe',
    slug: '/actions/segment',
    description: "Makes calls to the platform's analytics API.",
    import: "import { segment } from 'blip-iframe';",
    source: 'actions/segment.ts',
    docs: 'actions/segment.mdx',
  },
  sendCommand: {
    title: 'sendCommand',
    package: 'blip-iframe',
    slug: '/actions/send-command',
    description: 'Sends a command through the Blip Commands API.',
    import: "import { sendCommand } from 'blip-iframe';",
    source: 'actions/sendCommand.ts',
    docs: 'actions/send-command.mdx',
  },
  showAlert: {
    title: 'showAlert',
    package: 'blip-iframe',
    slug: '/actions/show-alert',
    description:
      'Shows a alert on the main platform with confirm and cancel buttons.',
    import: "import { showAlert } from 'blip-iframe';",
    source: 'actions/showAlert.ts',
    docs: 'actions/show-alert.mdx',
  },
  showModal: {
    title: 'showModal',
    package: 'blip-iframe',
    slug: '/actions/show-modal',
    description: 'Shows a modal dialog on the Blip platform.',
    import: "import { showModal } from 'blip-iframe';",
    source: 'actions/showModal.ts',
    docs: 'actions/show-modal.mdx',
  },
  showNavbar: {
    title: 'showNavbar',
    package: 'blip-iframe',
    slug: '/actions/show-navbar',
    description: 'Shows the top navigation bar of the Blip platform.',
    import: "import { showNavbar } from 'blip-iframe';",
    source: 'actions/showNavbar.ts',
    docs: 'actions/show-navbar.mdx',
  },
  startLoading: {
    title: 'startLoading',
    package: 'blip-iframe',
    slug: '/actions/start-loading',
    description: 'Starts showing a loading indicator in the Blip platform.',
    import: "import { startLoading } from 'blip-iframe';",
    source: 'actions/startLoading.ts',
    docs: 'actions/start-loading.mdx',
  },
  stopLoading: {
    title: 'stopLoading',
    package: 'blip-iframe',
    slug: '/actions/stop-loading',
    description: 'Stops showing the loading indicator in the Blip Platform.',
    import: "import { stopLoading } from 'blip-iframe';",
    source: 'actions/stopLoading.ts',
    docs: 'actions/stop-loading.mdx',
  },
  toast: {
    title: 'toast',
    package: 'blip-iframe',
    slug: '/actions/toast',
    description: 'Shows a toast notification on the Blip platform.',
    import: "import { toast } from 'blip-iframe';",
    source: 'actions/toast.ts',
    docs: 'actions/toast.mdx',
  },
  unauthorizedAccess: {
    title: 'unauthorizedAccess',
    package: 'blip-iframe',
    slug: '/actions/unauthorized-access',
    description:
      "Shows an unauthorized access toast and redirects the user to the tenant's home page.",
    import: "import { unauthorizedAccess } from 'blip-iframe';",
    source: 'actions/unauthorizedAccess.ts',
    docs: 'actions/unauthorized-access.mdx',
  },
  uploadFile: {
    title: 'uploadFile',
    package: 'blip-iframe',
    slug: '/actions/upload-file',
    description: "Uploads a file to Blip's public media server.",
    import: "import { uploadFile } from 'blip-iframe';",
    source: 'actions/uploadFile.ts',
    docs: 'actions/upload-file.mdx',
  },
};
